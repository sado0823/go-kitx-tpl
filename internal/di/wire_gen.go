// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/sado0823/go-kitx"
	"github.com/sado0823/go-kitx/kit/log"
	"github.com/sado0823/go-kitx/tpl/internal/conf"
	"github.com/sado0823/go-kitx/tpl/internal/dao"
	"github.com/sado0823/go-kitx/tpl/internal/server/grpc"
	"github.com/sado0823/go-kitx/tpl/internal/server/http"
	"github.com/sado0823/go-kitx/tpl/internal/service"
)

// Injectors from wire.go:

// wireApp init kitx application.
func WireApp(base *Base, server *conf.Server, data *conf.Data, logger log.Logger) (*kitx.App, func(), error) {
	daoDao, cleanup, err := dao.NewDao(data, logger)
	if err != nil {
		return nil, nil, err
	}
	serviceService, cleanup2, err := service.New(daoDao, data, logger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	grpcServer := grpc.NewServer(server, serviceService, logger)
	httpServer := http.NewServer(server, serviceService, logger)
	app := newApp(base, logger, grpcServer, httpServer)
	return app, func() {
		cleanup2()
		cleanup()
	}, nil
}
